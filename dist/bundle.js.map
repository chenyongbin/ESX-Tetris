{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config.js","webpack:///./src/canvas.js","webpack:///./src/util.js","webpack:///./src/screen/block.js","webpack:///./src/engine/db.js","webpack:///./src/bootstrap.js","webpack:///./src/gamepanel.js","webpack:///./src/screen/index.js","webpack:///./src/screen/matrix.js","webpack:///./src/screen/state.js","webpack:///./src/screen/digitsequence.js","webpack:///./src/screen/digit.js","webpack:///./src/control/index.js","webpack:///./src/control/button.js","webpack:///./src/engine/index.js","webpack:///./src/engine/timer.js","webpack:///./src/engine/builder.js","webpack:///./src/engine/shape.js","webpack:///./src/engine/animation.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","panel","screenMargin","screenBackgroundColor","screenHeightProportion","controlMargin","backgroundColor","screen","padding","matrix","borderWidth","blockSize","bgBlockBorderColor","bgBlockBackgroundColor","blockBorderColor","blockBackgroundColor","highlightBlockBorderColor","highlightBlockBackgroundColor","state","font","fontSize","top","left","control","_util","Canvas","containerDOM","offsetX","offsetY","width","height","arguments","length","undefined","_classCallCheck","this","Error","canvas","document","createElement","appendChild","style","position","context","getContext","setStyles","strokeRect","fillRect","clearRect","measureText","fillText","fillHalfEllipse","fillCircle","getLinearGradient","styles","_this","Array","isArray","forEach","items","split","replace","x","y","options","extend","text","save","restore","radius","isHorizontal","anticlockwise","scale","fillStyle","scaleX","scaleY","startAngle","endAngle","Math","PI","beginPath","closePath","moveTo","arc","fill","x0","y0","x1","y1","colorStops","gradient","createLinearGradient","stop","addColorStop","color","fibonacciScore","fibonacci","dest","source","getScore","yCoordinates","newYCoordinates","sort","a","b","score","lastY","shift","curY","Block","size","margin","outline","core","isActive","activate","inactivate","outlineOptions","strokeStyle","coreOptions","sizeX","sizeY","COORDINATES","initialize","matrixSizeX","matrixSizeY","j","xArr","push","update","prevCoordinates","curCoordinates","_ref","_ref2","isAllFilled","some","checkWhetherHasReachedLeft","coordinates","hasReached","_loop","_coordinates$i","coordinate","_loop2","checkWhetherHasReachedRight","_loop3","_coordinates$i2","_loop4","checkWhetherHasReachedBottom","_loop5","_coordinates$i3","_loop6","getFilledYCoordinates","every","reset","callback","inactives","actives","emptyY","fillRow","clearRow","getElementById","GamePanel","Screen","getScreenOptions","Control","getControlOptions","screenMatrixSize","getSize","Engine","highlight","unhighlight","updateScore","updateEliminatedRowNum","updateNextShape","addDropEventHandler","onMoveDrop","addLeftEventHandler","onMoveLeft","addRightEventHandler","onMoveRight","addDownEventHandler","onMoveDown","addRotateEventHandler","onMoveRotate","addRestartEventHandler","onGameRestart","addPauseEventHandler","onGamePause","start","_config","screenOptions","controlOptions","clientWidth","clientHeight","PANEL_CONFIG","paddingX","paddingY","horizontalBlockNumber","verticalBlockNumber","MATRIX_CONFIG","SCREEN_CONFIG","floor","matrixWidth","matrixHeight","Matrix","State","bgCanvas","horizontalSize","verticalSize","BLOCKS_MAP","getBlockKey","block","lineWidth","Number","isNaN","scoreDigitSequence","eliminatedRowsDigitSequence","STATE_CONFIG","scoreHeight","eliminatedRowsHeight","scoreOffsetX","scoreOffsetY","eliminatedRowsOffsetX","eliminatedRowsOffsetY","nextShapeOffsetX","nextShapeOffsetY","DigitSequence","matrixOffsetX","matrixOffsetY","parseInt","show","rowNum","min","max","digitList","digitNumber","digitSpanProportion","Digit","isInteger","valueStr","toString","charAt","hide","showDigit","includes","digit","bgCanvs","scaleRadius","BUTTONS_MAP","BUTTONS_EVENTHANDLERS_MAP","Map","getControlOffsetAgainstPage","e","offsetLeft","offsetTop","offsetParent","controlPageX","controlPageY","addEventHandler","eventName","handler","handlers","set","executeEventHandler","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","CONTROL_CONFIG","Button","showShadow","stopColor1","stopColor2","_getControlOffsetAgai","onclick","clickX","pageX","clickY","pageY","contains","onkeydown","keyCode","sx","sy","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","shadownColor","textAlign","textBaseLine","sqrt","pow","SHAPES","SCREEN","elapsingObject","shape","totalScore","eliminatedRowNum","isHighlightAnimating","isPaused","clear","onTimerElapsed","BUILDER","getShape","getRawCoordinates","down","onShapeMoved","DB","onRowsFilled","ANIMATION","console","log","Date","toLocaleString","fillScreen","clearScreen","TIMER","resume","right","rotate","pause","inetrval","timerID","clearInterval","interval","setInterval","SquareShape","LShape","ReverseLShape","MoutainShape","LineShape","LittleHShape","ReverseLittleHShape","shapes","random","Function","apply","Shape","concat","_toConsumableArray","_len","states","_key","stateIndex","map","timestamp","now","getCoordinates","_this2","count","timer","clearTimeout","setTimeout"],"mappings":"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","file":"bundle.js?v=440430d","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const panel = {\r\n\tscreenMargin: 25,\r\n\tscreenBackgroundColor: '#9aae82',\r\n\tscreenHeightProportion: 0.7,\r\n\tcontrolMargin: 15,\r\n\tbackgroundColor: '#264d8f'\r\n};\r\n\r\nexport const screen = {\r\n\tpadding: 2\r\n};\r\n\r\nexport const matrix = {\r\n\tborderWidth: 3,\r\n\tblockSize: 18,\r\n\tbgBlockBorderColor: '#84946e',\r\n\tbgBlockBackgroundColor: '#84946e',\r\n\tblockBorderColor: '#010101',\r\n\tblockBackgroundColor: '#000',\r\n\thighlightBlockBorderColor: '#560000',\r\n\thighlightBlockBackgroundColor: '#560000'\r\n};\r\n\r\nexport const state = {\r\n\tfont: '16px Arial',\r\n\tfontSize: 16,\r\n\ttop: 20,\r\n\tleft: 10\r\n};\r\n\r\nexport const control = {\r\n\tpadding: 10\r\n};\r\n","import { extend } from \"./util\";\r\n\r\n/**\r\n * 画布类\r\n * @export Canvas\r\n * @class Canvas\r\n */\r\nexport default class Canvas {\r\n  constructor(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    width,\r\n    height,\r\n    name = \"undefined name canvas\"\r\n  ) {\r\n    if (!containerDOM) {\r\n      throw new Error(`Cannot find container for ${name}.`);\r\n    }\r\n\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.name = name;\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    containerDOM.appendChild(this.canvas);\r\n    this.canvas.style.position = \"absolute\";\r\n    this.canvas.style.left = `${this.offsetX}px`;\r\n    this.canvas.style.top = `${this.offsetY}px`;\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.setStyles = this.setStyles.bind(this);\r\n    this.strokeRect = this.strokeRect.bind(this);\r\n    this.fillRect = this.fillRect.bind(this);\r\n    this.clearRect = this.clearRect.bind(this);\r\n    this.measureText = this.measureText.bind(this);\r\n    this.fillText = this.fillText.bind(this);\r\n    this.fillHalfEllipse = this.fillHalfEllipse.bind(this);\r\n    this.fillCircle = this.fillCircle.bind(this);\r\n    this.getLinearGradient = this.getLinearGradient.bind(this);\r\n  }\r\n\r\n  setStyles(styles) {\r\n    if (Array.isArray(styles)) {\r\n      styles.forEach(style => {\r\n        let items = style.split(\":\");\r\n        if (items[0] in this.canvas.style) {\r\n          this.canvas.style[items[0]] = items[1].replace(\";\", \"\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  strokeRect(x, y, width, height, options) {\r\n    extend(this.context, options);\r\n    this.context.strokeRect(x, y, width, height);\r\n  }\r\n\r\n  fillRect(x, y, width, height, options) {\r\n    extend(this.context, options);\r\n    this.context.fillRect(x, y, width, height);\r\n  }\r\n\r\n  clearRect(x, y, width, height, options) {\r\n    extend(this.context, options);\r\n    this.context.clearRect(x, y, width, height);\r\n  }\r\n\r\n  measureText(text) {\r\n    return this.context.measureText(text).width;\r\n  }\r\n\r\n  fillText(text, x, y, options) {\r\n    this.context.save();\r\n    extend(this.context, options);\r\n    this.context.fillText(text, x, y);\r\n    this.context.restore();\r\n  }\r\n\r\n  fillHalfEllipse(\r\n    x,\r\n    y,\r\n    radius,\r\n    isHorizontal,\r\n    anticlockwise,\r\n    scale,\r\n    options = { fillStyle: \"black\" }\r\n  ) {\r\n    let scaleX = 1,\r\n      scaleY = 1,\r\n      startAngle = 0,\r\n      endAngle = 0;\r\n    if (isHorizontal === true) {\r\n      scaleY = scale;\r\n      endAngle = Math.PI;\r\n    } else {\r\n      scaleX = scale;\r\n      startAngle = Math.PI / 2;\r\n      endAngle = (Math.PI * 3) / 2;\r\n    }\r\n\r\n    this.context.save();\r\n    extend(this.context, options);\r\n    this.context.beginPath();\r\n    this.context.closePath();\r\n    this.context.moveTo(x, y);\r\n    this.context.scale(scaleX, scaleY);\r\n    this.context.arc(\r\n      x / scaleX,\r\n      y / scaleY,\r\n      radius,\r\n      startAngle,\r\n      endAngle,\r\n      anticlockwise\r\n    );\r\n    this.context.fill();\r\n    this.context.restore();\r\n  }\r\n\r\n  fillCircle(x, y, radius, startAngle, endAngle, anticlockwise, options = {}) {\r\n    this.context.save();\r\n    extend(this.context, options);\r\n    this.context.beginPath();\r\n    this.context.moveTo(x, y);\r\n    this.context.arc(x, y, radius, startAngle, endAngle, anticlockwise);\r\n    this.context.closePath();\r\n    this.context.fill();\r\n    this.context.restore();\r\n  }\r\n\r\n  getLinearGradient(x0, y0, x1, y1, colorStops = []) {\r\n    let gradient = this.context.createLinearGradient(x0, y0, x1, y1);\r\n    if (Array.isArray(colorStops)) {\r\n      colorStops.forEach(stop => {\r\n        gradient.addColorStop(stop.position, stop.color);\r\n      });\r\n    }\r\n    return gradient;\r\n  }\r\n}\r\n","const extend = (dest, source) => {\r\n\tfor (let p in source) {\r\n\t\tif (p in dest) {\r\n\t\t\tdest[p] = source[p];\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst getScore = (yCoordinates) => {\r\n\tif (!yCoordinates || yCoordinates.length == 0) return 0;\r\n\r\n\tlet newYCoordinates = [ ...yCoordinates ];\r\n\tnewYCoordinates.sort((a, b) => b - a);\r\n\tlet score = 0,\r\n\t\tlastY = newYCoordinates.shift(),\r\n\t\tcurY = newYCoordinates.shift(),\r\n\t\tn = 1;\r\n\twhile (curY) {\r\n\t\tif (curY - lastY == 1) {\r\n\t\t\tn++;\r\n\t\t} else {\r\n\t\t\tscore += fibonacciScore(n);\r\n\t\t\tn = 1;\r\n\t\t\tlastY = curY;\r\n\t\t}\r\n\t\tcurY = newYCoordinates.shift();\r\n\t}\r\n\treturn score + fibonacciScore(n);\r\n};\r\n\r\nconst fibonacciScore = (n) => {\r\n\tif (n == 1) return 10;\r\n\telse if (n == 2) return 20;\r\n\treturn fibonacci(n - 1) + fibonacci(n - 2);\r\n};\r\n\r\nexport { extend, getScore };\r\n","/**\r\n * 方块类\r\n * @export Block\r\n * @class Block\r\n */\r\nexport default class Block {\r\n  constructor(canvas, x, y, size) {\r\n    this.canvas = canvas;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.size = size;\r\n    this.borderWidth = 1;\r\n    this.padding = 2;\r\n    this.margin = 2;\r\n\r\n    this.outline = {\r\n      x: this.x + this.margin,\r\n      y: this.y + this.margin,\r\n      size: this.size - this.margin * 2\r\n    };\r\n    this.core = {\r\n      x: this.outline.x + this.borderWidth + this.padding,\r\n      y: this.outline.y + this.borderWidth + this.padding,\r\n      size: this.outline.size - this.borderWidth * 2 - this.padding * 2\r\n    };\r\n\r\n    this.isActive = false;\r\n    this.activate = this.activate.bind(this);\r\n    this.inactivate = this.inactivate.bind(this);\r\n  }\r\n\r\n  activate(\r\n    outlineOptions = { strokeStyle: \"black\" },\r\n    coreOptions = { fillStyle: \"black\" }\r\n  ) {\r\n    if (this.isActive) return;\r\n    this.canvas.strokeRect(\r\n      this.outline.x,\r\n      this.outline.y,\r\n      this.outline.size,\r\n      this.outline.size,\r\n      outlineOptions\r\n    );\r\n    this.canvas.fillRect(\r\n      this.core.x,\r\n      this.core.y,\r\n      this.core.size,\r\n      this.core.size,\r\n      coreOptions\r\n    );\r\n    this.isActive = true;\r\n  }\r\n\r\n  inactivate() {\r\n    if (!this.isActive) return;\r\n    this.canvas.clearRect(this.x, this.y, this.size, this.size);\r\n    this.isActive = false;\r\n  }\r\n}\r\n","/**\r\n * @file 数据库模块\r\n * @version 1.0.0\r\n */\r\n\r\nlet sizeX = 0,\r\n  sizeY = 0,\r\n  length = 0;\r\nlet COORDINATES = [];\r\n\r\n/**\r\n * 初始化\r\n * @param {integer} matrixSizeX 矩阵X轴方向大小\r\n * @param {integer} matrixSizeY 矩阵Y轴方向大小\r\n */\r\nconst initialize = (matrixSizeX, matrixSizeY) => {\r\n  sizeX = matrixSizeX;\r\n  sizeY = matrixSizeY;\r\n  length = sizeX * sizeY;\r\n  for (let j = 0; j < sizeY; j++) {\r\n    let xArr = [];\r\n    for (let i = 0; i < sizeX; i++) {\r\n      xArr.push(0);\r\n    }\r\n    COORDINATES.push(xArr);\r\n  }\r\n};\r\n\r\n/**\r\n * 更新坐标\r\n * @param {Array<Object<x,y>>} prevCoordinates 上一个坐标集\r\n * @param {Array<Object<x,y>>} curCoordinates 当前坐标集\r\n */\r\nconst update = (prevCoordinates, curCoordinates) => {\r\n  prevCoordinates.forEach(({ x, y }) => {\r\n    x < sizeX && x >= 0 && y < sizeY && y >= 0 && (COORDINATES[y][x] = 0);\r\n  });\r\n  curCoordinates.forEach(({ x, y }) => {\r\n    x < sizeX && x >= 0 && y < sizeY && y >= 0 && (COORDINATES[y][x] = 1);\r\n  });\r\n};\r\n\r\n/**\r\n * 检查是否都充满了\r\n * @returns\r\n */\r\nconst isAllFilled = () => {\r\n  return COORDINATES[0].some(state => state == 1);\r\n};\r\n\r\n/**\r\n * 检查是否已到达左侧\r\n * @param {Array<Object<x,y>>} coordinates 坐标集\r\n * @returns boolean\r\n */\r\nconst checkWhetherHasReachedLeft = coordinates => {\r\n  let hasReached = false;\r\n  for (let i = 0; i < coordinates.length; i++) {\r\n    let { x, y } = coordinates[i];\r\n    if (x <= 0 || x >= sizeX || y < 0 || y >= sizeY) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n\r\n    if (\r\n      coordinates.some(coordinate => x - 1 == coordinate.x && y == coordinate.y)\r\n    )\r\n      continue;\r\n\r\n    if (COORDINATES[y][x - 1] == 1) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n  }\r\n  return hasReached;\r\n};\r\n\r\n/**\r\n * 检查是否已到达右侧\r\n * @param {Array<Object<x,y>>} coordinates 坐标集\r\n * @returns boolean\r\n */\r\nconst checkWhetherHasReachedRight = coordinates => {\r\n  let hasReached = false;\r\n  for (let i = 0; i < coordinates.length; i++) {\r\n    let { x, y } = coordinates[i];\r\n    if (x < 0 || x >= sizeX - 1 || y < 0 || y >= sizeY) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n\r\n    if (\r\n      coordinates.some(coordinate => x + 1 == coordinate.x && y == coordinate.y)\r\n    )\r\n      continue;\r\n\r\n    if (COORDINATES[y][x + 1] == 1) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n  }\r\n  return hasReached;\r\n};\r\n\r\n/**\r\n * 检查是否已到达底部\r\n * @param {Array<Object<x,y>>} coordinates 坐标集\r\n * @returns\r\n */\r\nconst checkWhetherHasReachedBottom = coordinates => {\r\n  let hasReached = false;\r\n  for (let i = 0; i < coordinates.length; i++) {\r\n    let { x, y } = coordinates[i];\r\n    if (x < 0 || x >= sizeX || y < 0 || y >= sizeY - 1) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n\r\n    if (\r\n      coordinates.some(coordinate => x == coordinate.x && y + 1 == coordinate.y)\r\n    )\r\n      continue;\r\n\r\n    if (COORDINATES[y + 1][x] == 1) {\r\n      hasReached = true;\r\n      break;\r\n    }\r\n  }\r\n  return hasReached;\r\n};\r\n\r\n/**\r\n * 获取已填充满的行坐标\r\n * @returns Array<integer>\r\n */\r\nconst getFilledYCoordinates = () => {\r\n  let yCoordinates = [];\r\n  for (let y = sizeY - 1; y >= 0; y--) {\r\n    if (!COORDINATES[y].some(state => state == 1)) break;\r\n    if (COORDINATES[y].every(state => state == 1)) {\r\n      for (let x = 0; x < sizeX; x++) {\r\n        COORDINATES[y][x] = 0;\r\n      }\r\n      yCoordinates.push(y);\r\n    }\r\n  }\r\n  return yCoordinates;\r\n};\r\n\r\n/**\r\n * 填满若干行之后，重置整个坐标系\r\n * @param {Array<integer>} yCoordinates 已填满的行坐标\r\n * @param {function} callback 回调函数\r\n */\r\nconst reset = (yCoordinates, callback) => {\r\n  let inactives = [],\r\n    actives = [];\r\n\r\n  yCoordinates.sort((a, b) => b - a);\r\n  let y = yCoordinates[0],\r\n    emptyY = y;\r\n  while (y >= 0 && y < sizeY) {\r\n    if (COORDINATES[y].some(state => state == 1)) {\r\n      inactives = [];\r\n      actives = [];\r\n      for (let x = 0; x < sizeX; x++) {\r\n        if (COORDINATES[y][x] == 1) {\r\n          COORDINATES[y][x] = 0;\r\n          inactives.push({ x: x, y: y });\r\n          COORDINATES[emptyY][x] = 1;\r\n          actives.push({ x: x, y: emptyY });\r\n        }\r\n      }\r\n\r\n      emptyY--;\r\n      if (inactives.length > 0 || actives.length > 0) {\r\n        callback && callback(inactives, actives);\r\n      }\r\n    }\r\n    y--;\r\n  }\r\n};\r\n\r\n/**\r\n * 逐行填满\r\n */\r\nconst fillRow = y => {\r\n  if (y < 0 || y >= sizeY) return [];\r\n  let coordinates = [];\r\n  for (let x = 0; x < sizeX; x++) {\r\n    COORDINATES[y][x] = 1;\r\n    coordinates.push({ x: x, y: y });\r\n  }\r\n  return coordinates;\r\n};\r\n\r\n/**\r\n * 逐行清空\r\n */\r\nconst clearRow = y => {\r\n  if (y < 0 || y >= sizeY) return [];\r\n\r\n  let coordinates = [];\r\n  for (let x = 0; x < sizeX; x++) {\r\n    COORDINATES[y][x] = 0;\r\n    coordinates.push({ x: x, y: y });\r\n  }\r\n  return coordinates;\r\n};\r\n\r\nexport default {\r\n  initialize,\r\n  update,\r\n  isAllFilled,\r\n  checkWhetherHasReachedLeft,\r\n  checkWhetherHasReachedRight,\r\n  checkWhetherHasReachedBottom,\r\n  getFilledYCoordinates,\r\n  reset,\r\n  fillRow,\r\n  clearRow\r\n};\r\n","/**\r\n * @file 启动模块\r\n * @version 1.0.0\r\n */\r\n\r\nlet containerDOM = document.getElementById(\"container\");\r\nif (!containerDOM) {\r\n  throw new Error(\"Cannot find container.\");\r\n}\r\n\r\nimport GamePanel from \"./gamepanel\";\r\nimport Screen from \"./screen\";\r\nimport Control from \"./control\";\r\nimport Engine from \"./engine\";\r\n\r\nGamePanel.initialize(containerDOM);\r\nScreen.initialize(containerDOM, GamePanel.getScreenOptions());\r\nControl.initialize(containerDOM, GamePanel.getControlOptions());\r\nlet screenMatrixSize = Screen.getSize();\r\nEngine.initialize({\r\n  matrixSizeX: screenMatrixSize.matrixSizeX,\r\n  matrixSizeY: screenMatrixSize.matrixSizeY,\r\n  activate: Screen.activate,\r\n  inactivate: Screen.inactivate,\r\n  highlight: Screen.highlight,\r\n  unhighlight: Screen.unhighlight,\r\n  updateScore: Screen.updateScore,\r\n  updateEliminatedRowNum: Screen.updateEliminatedRowNum,\r\n  updateNextShape: Screen.updateNextShape\r\n});\r\n\r\nControl.addDropEventHandler(Engine.onMoveDrop);\r\nControl.addLeftEventHandler(Engine.onMoveLeft);\r\nControl.addRightEventHandler(Engine.onMoveRight);\r\nControl.addDownEventHandler(Engine.onMoveDown);\r\nControl.addRotateEventHandler(Engine.onMoveRotate);\r\nControl.addRestartEventHandler(Engine.onGameRestart);\r\nControl.addPauseEventHandler(Engine.onGamePause);\r\n\r\nEngine.start();\r\n","/**\r\n * @file 游戏面板模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { panel as PANEL_CONFIG } from './config';\r\nimport Canvas from './canvas';\r\n\r\nlet screenOptions = { offsetX: 0, offsetY: 0, width: 0, height: 0 },\r\n\tcontrolOptions = { offsetX: 0, offsetY: 0, width: 0, height: 0 };\r\n\r\n/**\r\n * 初始化\r\n * @param {element} containerDOM 容器DOM对象\r\n */\r\nconst initialize = (containerDOM) => {\r\n\tlet width = containerDOM.clientWidth,\r\n\t\theight = containerDOM.clientHeight;\r\n\r\n\tscreenOptions = {\r\n\t\toffsetX: PANEL_CONFIG.screenMargin,\r\n\t\toffsetY: PANEL_CONFIG.screenMargin,\r\n\t\twidth: width - 2 * PANEL_CONFIG.screenMargin,\r\n\t\theight: height * PANEL_CONFIG.screenHeightProportion - 2 * PANEL_CONFIG.screenMargin\r\n\t};\r\n\r\n\tcontrolOptions = {\r\n\t\toffsetX: PANEL_CONFIG.controlMargin,\r\n\t\toffsetY: height * PANEL_CONFIG.screenHeightProportion,\r\n\t\twidth: width - 2 * PANEL_CONFIG.controlMargin,\r\n\t\theight: height * (1 - PANEL_CONFIG.screenHeightProportion) - PANEL_CONFIG.controlMargin\r\n\t};\r\n\r\n\tlet canvas = new Canvas(containerDOM, 0, 0, width, height);\r\n\tcanvas.setStyles([ 'z-index:1;' ]);\r\n\tcanvas.fillRect(0, 0, width, height, {\r\n\t\tfillStyle: PANEL_CONFIG.backgroundColor\r\n\t});\r\n\r\n\tcanvas.clearRect(0, 0, 10, 10);\r\n\tcanvas.fillCircle(10, 10, 10, Math.PI / 2, Math.PI, true);\r\n\tcanvas.clearRect(width - 10, 0, 10, 10);\r\n\tcanvas.fillCircle(width - 10, 10, 10, 0, Math.PI / 2, true);\r\n\tcanvas.clearRect(width - 10, height - 10, 10, 10);\r\n\tcanvas.fillCircle(width - 10, height - 10, 10, 0, Math.PI * 2, false);\r\n\tcanvas.clearRect(0, height - 10, 10, 10);\r\n\tcanvas.fillCircle(10, height - 10, 10, Math.PI, Math.PI * 1.5, true);\r\n\r\n\tcanvas.clearRect(screenOptions.offsetX, screenOptions.offsetY, screenOptions.width, screenOptions.height);\r\n\tcanvas.fillRect(screenOptions.offsetX, screenOptions.offsetY, screenOptions.width, screenOptions.height, {\r\n\t\tfillStyle: PANEL_CONFIG.screenBackgroundColor\r\n\t});\r\n};\r\n\r\n/**\r\n * 获取屏幕选项配置\r\n * @returns\r\n */\r\nconst getScreenOptions = () => {\r\n\treturn screenOptions;\r\n};\r\n\r\n/**\r\n * 获取控制板选项配置\r\n * @returns\r\n */\r\nconst getControlOptions = () => {\r\n\treturn controlOptions;\r\n};\r\n\r\nexport default { initialize, getScreenOptions, getControlOptions };\r\n","/**\r\n * @file 屏幕模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { screen as SCREEN_CONFIG, matrix as MATRIX_CONFIG } from \"../config\";\r\nimport Matrix from \"./matrix\";\r\nimport State from \"./state\";\r\n\r\nlet paddingX = 0,\r\n  paddingY = 0,\r\n  horizontalBlockNumber = 0,\r\n  verticalBlockNumber = 0,\r\n  matrixWidthProportion = 0.7;\r\n\r\n/**\r\n * 初始化\r\n * @param {element} containerDOM 容器DOM对象\r\n * @param {object} { offsetX, offsetY, width, height }\r\n */\r\nconst initialize = (containerDOM, { offsetX, offsetY, width, height }) => {\r\n  width = width - 4 * MATRIX_CONFIG.borderWidth - 2 * SCREEN_CONFIG.padding;\r\n  height = height - 4 * MATRIX_CONFIG.borderWidth - 2 * SCREEN_CONFIG.padding;\r\n  horizontalBlockNumber = Math.floor(width / MATRIX_CONFIG.blockSize);\r\n  verticalBlockNumber = Math.floor(height / MATRIX_CONFIG.blockSize);\r\n  if (width % MATRIX_CONFIG.blockSize == 0) {\r\n    horizontalBlockNumber--;\r\n    paddingX = MATRIX_CONFIG.blockSize / 2;\r\n  } else {\r\n    paddingX = (width - horizontalBlockNumber * MATRIX_CONFIG.blockSize) / 2;\r\n  }\r\n  if (height % MATRIX_CONFIG.blockSize == 0) {\r\n    verticalBlockNumber--;\r\n    paddingY = MATRIX_CONFIG.blockSize / 2;\r\n  } else {\r\n    paddingY = (height - verticalBlockNumber * MATRIX_CONFIG.blockSize) / 2;\r\n  }\r\n\r\n  offsetX = offsetX + paddingX + SCREEN_CONFIG.padding;\r\n  offsetY = offsetY + paddingY + SCREEN_CONFIG.padding;\r\n  horizontalBlockNumber = Math.floor(\r\n    horizontalBlockNumber * matrixWidthProportion\r\n  );\r\n\r\n  let matrixWidth =\r\n      MATRIX_CONFIG.blockSize * horizontalBlockNumber +\r\n      2 * MATRIX_CONFIG.borderWidth,\r\n    matrixHeight =\r\n      MATRIX_CONFIG.blockSize * verticalBlockNumber +\r\n      2 * MATRIX_CONFIG.borderWidth;\r\n\r\n  Matrix.initialize(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    matrixWidth,\r\n    matrixHeight,\r\n    horizontalBlockNumber,\r\n    verticalBlockNumber\r\n  );\r\n\r\n  State.initialize(\r\n    containerDOM,\r\n    offsetX + matrixWidth,\r\n    offsetY,\r\n    width - 2 * paddingX - matrixWidth,\r\n    height - 2 * paddingY\r\n  );\r\n};\r\n\r\n/**\r\n * 获取屏幕矩阵尺寸\r\n * @returns\r\n */\r\nconst getSize = () => {\r\n  return {\r\n    matrixSizeX: horizontalBlockNumber,\r\n    matrixSizeY: verticalBlockNumber\r\n  };\r\n};\r\n\r\nexport default {\r\n  initialize,\r\n  getSize,\r\n  activate: Matrix.activate,\r\n  inactivate: Matrix.inactivate,\r\n  highlight: Matrix.highlight,\r\n  unhighlight: Matrix.unhighlight,\r\n  updateScore: State.updateScore,\r\n  updateEliminatedRowNum: State.updateEliminatedRowNum,\r\n  updateNextShape: State.updateNextShape\r\n};\r\n","/**\r\n * @file 屏幕矩阵模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { matrix as MATRIX_CONFIG } from \"../config\";\r\nimport Canvas from \"../canvas\";\r\nimport Block from \"./block\";\r\n\r\nlet bgCanvas = null,\r\n  canvas = null,\r\n  horizontalSize = 0,\r\n  verticalSize = 0;\r\n\r\nconst BLOCKS_MAP = {},\r\n  getBlockKey = (x, y) => {\r\n    return `KEY_${x}_${y}`;\r\n  };\r\n\r\nconst initialize = (\r\n  containerDOM,\r\n  offsetX,\r\n  offsetY,\r\n  width,\r\n  height,\r\n  horizontalBlockNumber,\r\n  verticalBlockNumber\r\n) => {\r\n  horizontalSize = horizontalBlockNumber;\r\n  verticalSize = verticalBlockNumber;\r\n\r\n  bgCanvas = new Canvas(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    width,\r\n    height,\r\n    \"Matrix Background Canvas\"\r\n  );\r\n  bgCanvas.setStyles([\"z-index:2;\"]);\r\n\r\n  canvas = new Canvas(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    width,\r\n    height,\r\n    \"Matrix Main Canvas\"\r\n  );\r\n  canvas.setStyles([\"z-index:3;\"]);\r\n\r\n  for (let i = 0; i < horizontalSize; i++) {\r\n    for (let j = 0; j < verticalSize; j++) {\r\n      let block = new Block(\r\n        bgCanvas,\r\n        i * MATRIX_CONFIG.blockSize + MATRIX_CONFIG.borderWidth,\r\n        j * MATRIX_CONFIG.blockSize + MATRIX_CONFIG.borderWidth,\r\n        MATRIX_CONFIG.blockSize\r\n      );\r\n      block.activate(\r\n        { strokeStyle: MATRIX_CONFIG.bgBlockBorderColor },\r\n        { fillStyle: MATRIX_CONFIG.bgBlockBackgroundColor }\r\n      );\r\n      block.canvas = canvas;\r\n      block.isActive = false;\r\n      BLOCKS_MAP[getBlockKey(i, j)] = block;\r\n    }\r\n  }\r\n\r\n  canvas.strokeRect(0, 0, width, height, {\r\n    lineWidth: MATRIX_CONFIG.borderWidth\r\n  });\r\n};\r\n\r\nconst activate = coordinates => {\r\n  if (!Array.isArray(coordinates)) return;\r\n  coordinates.forEach(({ x, y }) => {\r\n    let block = BLOCKS_MAP[getBlockKey(x, y)];\r\n    block &&\r\n      block.activate(\r\n        { strokeStyle: MATRIX_CONFIG.blockBorderColor },\r\n        { fillStyle: MATRIX_CONFIG.blockBackgroundColor }\r\n      );\r\n  });\r\n};\r\n\r\nconst inactivate = coordinates => {\r\n  if (!Array.isArray(coordinates)) return;\r\n  coordinates.forEach(({ x, y }) => {\r\n    let block = BLOCKS_MAP[getBlockKey(x, y)];\r\n    block && block.inactivate();\r\n  });\r\n};\r\n\r\nconst highlight = yCoordinates => {\r\n  if (!Array.isArray(yCoordinates) || yCoordinates.length == 0) return;\r\n\r\n  yCoordinates.forEach(y => {\r\n    if (!Number.isNaN(y) && y >= 0 && y < verticalSize) {\r\n      for (let i = 0; i < horizontalSize; i++) {\r\n        let block = BLOCKS_MAP[getBlockKey(i, y)];\r\n        if (!block) continue;\r\n        block.activate(\r\n          { strokeStyle: MATRIX_CONFIG.highlightBlockBorderColor },\r\n          { fillStyle: MATRIX_CONFIG.highlightBlockBackgroundColor }\r\n        );\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst unhighlight = yCoordinates => {\r\n  if (!Array.isArray(yCoordinates) || yCoordinates.length == 0) return;\r\n\r\n  yCoordinates.forEach(y => {\r\n    if (!Number.isNaN(y) && y >= 0 && y < verticalSize) {\r\n      for (let i = 0; i < horizontalSize; i++) {\r\n        let block = BLOCKS_MAP[getBlockKey(i, y)];\r\n        if (!block) continue;\r\n        block.inactivate();\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport default {\r\n  initialize,\r\n  activate,\r\n  inactivate,\r\n  highlight,\r\n  unhighlight\r\n};\r\n","/**\r\n * @file 屏幕状态模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { state as STATE_CONFIG, matrix as MATRIX_CONFIG } from \"../config\";\r\nimport Canvas from \"../canvas\";\r\nimport Block from \"./block\";\r\nimport DigitSequence from \"./digitsequence\";\r\n\r\nlet bgCanvas = null,\r\n  canvas = null,\r\n  scoreDigitSequence = null,\r\n  eliminatedRowsDigitSequence = null;\r\n\r\nconst BLOCKS_MAP = {},\r\n  getBlockKey = (x, y) => {\r\n    return `KEY_${x}_${y}`;\r\n  };\r\n\r\nconst initialize = (containerDOM, offsetX, offsetY, width, height) => {\r\n  bgCanvas = new Canvas(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    width,\r\n    height,\r\n    \"State Background Canvas\"\r\n  );\r\n  bgCanvas.setStyles([\"z-index:2;\"]);\r\n\r\n  canvas = new Canvas(\r\n    containerDOM,\r\n    offsetX,\r\n    offsetY,\r\n    width,\r\n    height,\r\n    \"State Main Canvas\"\r\n  );\r\n  canvas.setStyles([\"z-index:3;\"]);\r\n\r\n  width -= STATE_CONFIG.left;\r\n  height -= STATE_CONFIG.top;\r\n  let scoreHeight = height * 0.3,\r\n    eliminatedRowsHeight = height * 0.3,\r\n    nextBlockHeight = height * 0.4,\r\n    scoreOffsetX = STATE_CONFIG.left,\r\n    scoreOffsetY = STATE_CONFIG.top,\r\n    eliminatedRowsOffsetX = STATE_CONFIG.left,\r\n    eliminatedRowsOffsetY = STATE_CONFIG.top + scoreHeight,\r\n    nextShapeOffsetX = STATE_CONFIG.left,\r\n    nextShapeOffsetY = STATE_CONFIG.top + scoreHeight + eliminatedRowsHeight;\r\n\r\n  let digitSequenceOffset = 5;\r\n  canvas.context.font = STATE_CONFIG.font;\r\n  canvas.fillText(\"得分\", scoreOffsetX, scoreOffsetY);\r\n  scoreDigitSequence = new DigitSequence(\r\n    bgCanvas,\r\n    canvas,\r\n    scoreOffsetX + digitSequenceOffset,\r\n    scoreOffsetY + STATE_CONFIG.fontSize,\r\n    width - digitSequenceOffset\r\n  );\r\n\r\n  canvas.fillText(\"消除行\", eliminatedRowsOffsetX, eliminatedRowsOffsetY);\r\n  eliminatedRowsDigitSequence = new DigitSequence(\r\n    bgCanvas,\r\n    canvas,\r\n    eliminatedRowsOffsetX + digitSequenceOffset,\r\n    eliminatedRowsOffsetY + STATE_CONFIG.fontSize,\r\n    width - digitSequenceOffset\r\n  );\r\n\r\n  canvas.fillText(\"下一个\", nextShapeOffsetX, nextShapeOffsetY);\r\n  let matrixOffsetX = nextShapeOffsetX,\r\n    matrixOffsetY = nextShapeOffsetY + STATE_CONFIG.fontSize;\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 2; j++) {\r\n      let block = new Block(\r\n        bgCanvas,\r\n        matrixOffsetX + i * MATRIX_CONFIG.blockSize,\r\n        matrixOffsetY + j * MATRIX_CONFIG.blockSize,\r\n        MATRIX_CONFIG.blockSize\r\n      );\r\n      block.activate(\r\n        { strokeStyle: MATRIX_CONFIG.bgBlockBorderColor },\r\n        { fillStyle: MATRIX_CONFIG.bgBlockBackgroundColor }\r\n      );\r\n      block.canvas = canvas;\r\n      block.isActive = false;\r\n      BLOCKS_MAP[getBlockKey(i, j)] = block;\r\n    }\r\n  }\r\n};\r\n\r\nconst updateScore = score => {\r\n  score = Number.parseInt(score);\r\n  score > 0 ? scoreDigitSequence.show(score) : scoreDigitSequence.reset();\r\n};\r\n\r\nconst updateEliminatedRowNum = rowNum => {\r\n  rowNum = Number.parseInt(rowNum);\r\n  rowNum > 0\r\n    ? eliminatedRowsDigitSequence.show(rowNum)\r\n    : eliminatedRowsDigitSequence.reset();\r\n};\r\n\r\nconst updateNextShape = coordinates => {\r\n  if (!Array.isArray(coordinates)) return;\r\n  for (let key in BLOCKS_MAP) {\r\n    BLOCKS_MAP[key].inactivate();\r\n  }\r\n  if (coordinates.length == 0) return;\r\n  coordinates.forEach(coordinate => {\r\n    let block = BLOCKS_MAP[getBlockKey(coordinate.x, coordinate.y)];\r\n    block &&\r\n      block.activate(\r\n        { strokeStyle: MATRIX_CONFIG.blockBorderColor },\r\n        { fillStyle: MATRIX_CONFIG.blockBackgroundColor }\r\n      );\r\n  });\r\n};\r\n\r\nexport default {\r\n  initialize,\r\n  updateScore,\r\n  updateEliminatedRowNum,\r\n  updateNextShape\r\n};\r\n","import Digit from \"./digit\";\r\n\r\n/**\r\n * 数字序列类\r\n * @export DigitSequence\r\n * @class DigitSequence\r\n */\r\nexport default class DigitSequence {\r\n  constructor(bgCanvas, canvas, x, y, width) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n\r\n    this.min = 0;\r\n    this.max = 999999;\r\n    this.digitList = [];\r\n    this.digitNumber = 6;\r\n    this.digitSpanProportion = 0.4;\r\n    this.size =\r\n      this.width / (this.digitNumber + (this.digitNumber - 1) * this.digitSpanProportion);\r\n\r\n    for (let i = this.digitNumber - 1; i >= 0; i--) {\r\n      this.digitList.push(\r\n        new Digit(\r\n          this.x + i * this.size + i * this.digitSpanProportion * this.size,\r\n          this.y,\r\n          this.size,\r\n          bgCanvas,\r\n          canvas\r\n        )\r\n      );\r\n    }\r\n\r\n    this.show = this.show.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n  }\r\n\r\n  show(value) {\r\n    if (!Number.isInteger(value))\r\n      throw new Error(\"The value should be an integer.\");\r\n    if (value < this.min || value > this.max)\r\n      throw new Error(`The value should between ${this.min} and ${this.max}.`);\r\n\r\n    this.reset();\r\n    let valueStr = value.toString();\r\n    for (let i = 0; i < valueStr.length; i++) {\r\n      i < this.digitNumber &&\r\n        this.digitList[i].show(valueStr.charAt(valueStr.length - 1 - i));\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.digitList.forEach(d => d.hide());\r\n  }\r\n}\r\n","const showDigit = function(canvas, d, fillStyle) {\r\n  if (![1, 4].includes(d.digit)) {\r\n    d.canvas.fillHalfEllipse(\r\n      d.x + d.size / 2,\r\n      d.y,\r\n      d.radius,\r\n      true,\r\n      false,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if (![5, 6].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x + d.size,\r\n      d.y + d.size / 2,\r\n      d.radius,\r\n      false,\r\n      false,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if (![2].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x + d.size,\r\n      d.y + d.size * 1.5,\r\n      d.radius,\r\n      false,\r\n      false,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if (![1, 4, 7].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x + d.size / 2,\r\n      d.y + d.size * 2,\r\n      d.radius,\r\n      true,\r\n      true,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if ([0, 2, 6, 8].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x,\r\n      d.y + d.size * 1.5,\r\n      d.radius,\r\n      false,\r\n      true,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if (![0, 1, 7].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x + d.size / 2,\r\n      d.y + d.size,\r\n      d.radius,\r\n      true,\r\n      false,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n\r\n  if (![1, 2, 3, 7].includes(d.digit)) {\r\n    canvas.fillHalfEllipse(\r\n      d.x,\r\n      d.y + d.size / 2,\r\n      d.radius,\r\n      false,\r\n      true,\r\n      d.scale,\r\n      { fillStyle: fillStyle }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * 数字类\r\n * @export Digit\r\n * @class Digit\r\n */\r\nexport default class Digit {\r\n  constructor(x, y, size, bgCanvs, canvas) {\r\n    if (!bgCanvs || !canvas)\r\n      throw new Error(\r\n        \"The digit backgroundCanvas and canvas should not be null.\"\r\n      );\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.size = size;\r\n    this.scale = 0.4;\r\n    this.radius = this.size / 2 - 1;\r\n    this.scaleRadius = this.scale * this.radius;\r\n    this.digit = 8;\r\n    this.bgCanvas = bgCanvs;\r\n    this.canvas = canvas;\r\n\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n\r\n    this.hide();\r\n  }\r\n\r\n  show(digit) {\r\n    digit = Number.parseInt(digit);\r\n    if (!Number.isInteger(digit) || digit < 0 || digit > 9) return;\r\n    this.digit = digit;\r\n    this.bgCanvas.clearRect(\r\n      this.x - this.scaleRadius,\r\n      this.y - this.scaleRadius,\r\n      this.size + 2 * this.scaleRadius,\r\n      this.size * 2 + 2 * this.scaleRadius\r\n    );\r\n    this.canvas.clearRect(\r\n      this.x - this.scaleRadius,\r\n      this.y - this.scaleRadius,\r\n      this.size + 2 * this.scaleRadius,\r\n      this.size * 2 + 2 * this.scaleRadius\r\n    );\r\n    showDigit(this.canvas, this);\r\n  }\r\n\r\n  hide() {\r\n    this.digit = 8;\r\n    this.bgCanvas.clearRect(\r\n      this.x - this.scaleRadius,\r\n      this.y - this.scaleRadius,\r\n      this.size + 2 * this.scaleRadius,\r\n      this.size * 2 + 2 * this.scaleRadius\r\n    );\r\n    this.canvas.clearRect(\r\n      this.x - this.scaleRadius,\r\n      this.y - this.scaleRadius,\r\n      this.size + 2 * this.scaleRadius,\r\n      this.size * 2 + 2 * this.scaleRadius\r\n    );\r\n    showDigit(this.bgCanvas, this, \"#84946e\");\r\n  }\r\n}\r\n","/**\r\n * @file 控制板模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { control as CONTROL_CONFIG } from '../config';\r\nimport Canvas from '../canvas';\r\nimport Button from './button';\r\n\r\nlet canvas = null;\r\nconst BUTTONS_MAP = {},\r\n\tBUTTONS_EVENTHANDLERS_MAP = new Map();\r\n\r\n/**\r\n * 初始化\r\n * @param {Element} containerDOM 容器DOM对象\r\n * @param {Object} { offsetX, offsetY, width, height } {偏移X，偏移Y，宽，高}\r\n */\r\nconst initialize = (containerDOM, { offsetX, offsetY, width, height }) => {\r\n\tcanvas = new Canvas(containerDOM, offsetX, offsetY, width, height, '控制器主画布');\r\n\tcanvas.setStyles([ 'z-index:3;' ]);\r\n\r\n\tlet radius = (height - 2 * CONTROL_CONFIG.padding) / 6;\r\n\tBUTTONS_MAP['DROP'] = new Button(\r\n\t\tcanvas,\r\n\t\tCONTROL_CONFIG.padding + 2 * radius,\r\n\t\tCONTROL_CONFIG.padding,\r\n\t\tradius,\r\n\t\t'掉落',\r\n\t\t'Drop Button'\r\n\t);\r\n\tBUTTONS_MAP['LEFT'] = new Button(\r\n\t\tcanvas,\r\n\t\tCONTROL_CONFIG.padding,\r\n\t\tCONTROL_CONFIG.padding + 2 * radius,\r\n\t\tradius,\r\n\t\t'左移',\r\n\t\t'Left Button'\r\n\t);\r\n\tBUTTONS_MAP['RIGHT'] = new Button(\r\n\t\tcanvas,\r\n\t\tCONTROL_CONFIG.padding + 4 * radius,\r\n\t\tCONTROL_CONFIG.padding + 2 * radius,\r\n\t\tradius,\r\n\t\t'右移',\r\n\t\t'Right Button'\r\n\t);\r\n\tBUTTONS_MAP['DOWN'] = new Button(\r\n\t\tcanvas,\r\n\t\tCONTROL_CONFIG.padding + 2 * radius,\r\n\t\tCONTROL_CONFIG.padding + 4 * radius,\r\n\t\tradius,\r\n\t\t'下移',\r\n\t\t'Drop Button'\r\n\t);\r\n\tBUTTONS_MAP['ROTATE'] = new Button(\r\n\t\tcanvas,\r\n\t\twidth - CONTROL_CONFIG.padding - 4 * radius,\r\n\t\theight - CONTROL_CONFIG.padding - 5 * radius,\r\n\t\tradius * 2,\r\n\t\t'旋转',\r\n\t\t'Rotate Button'\r\n\t);\r\n\tBUTTONS_MAP['RESTART'] = new Button(\r\n\t\tcanvas,\r\n\t\twidth - CONTROL_CONFIG.padding - 5.5 * radius,\r\n\t\tCONTROL_CONFIG.padding,\r\n\t\tradius * 0.8,\r\n\t\t'重启',\r\n\t\t'Restart Button',\r\n\t\t{\r\n\t\t\tshowShadow: false,\r\n\t\t\tstopColor1: 'darkgreen',\r\n\t\t\tstopColor2: 'darkgreen'\r\n\t\t}\r\n\t);\r\n\tBUTTONS_MAP['PAUSE'] = new Button(\r\n\t\tcanvas,\r\n\t\twidth - CONTROL_CONFIG.padding - 7.5 * radius,\r\n\t\tCONTROL_CONFIG.padding,\r\n\t\tradius * 0.8,\r\n\t\t'暂停',\r\n\t\t'Pause Button',\r\n\t\t{\r\n\t\t\tshowShadow: false,\r\n\t\t\tstopColor1: 'darkgreen',\r\n\t\t\tstopColor2: 'darkgreen'\r\n\t\t}\r\n\t);\r\n\r\n\tlet { controlPageX, controlPageY } = getControlOffsetAgainstPage();\r\n\tcanvas.canvas.onclick = function(e) {\r\n\t\tlet eventName = '',\r\n\t\t\tclickX = e.pageX - controlPageX,\r\n\t\t\tclickY = e.pageY - controlPageY;\r\n\t\tfor (let name in BUTTONS_MAP) {\r\n\t\t\tif (BUTTONS_MAP[name].contains(clickX, clickY)) {\r\n\t\t\t\teventName = name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\teventName && executeEventHandler(eventName);\r\n\t};\r\n\r\n\tdocument.onkeydown = function(e) {\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase 32:\r\n\t\t\t\texecuteEventHandler('DROP');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37:\r\n\t\t\t\texecuteEventHandler('LEFT');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38:\r\n\t\t\t\texecuteEventHandler('ROTATE');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39:\r\n\t\t\t\texecuteEventHandler('RIGHT');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40:\r\n\t\t\t\texecuteEventHandler('DOWN');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 80:\r\n\t\t\t\texecuteEventHandler('PAUSE');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82:\r\n\t\t\t\texecuteEventHandler('RESTART');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/**\r\n * 获取控件板相对于页面的偏移坐标\r\n * @returns\r\n */\r\nconst getControlOffsetAgainstPage = () => {\r\n\tif (!canvas) return { offsetX: 0, offsetY: 0 };\r\n\tlet x = 0,\r\n\t\ty = 0,\r\n\t\te = canvas.canvas;\r\n\twhile (e !== null) {\r\n\t\tx += e.offsetLeft;\r\n\t\ty += e.offsetTop;\r\n\t\te = e.offsetParent;\r\n\t}\r\n\treturn { controlPageX: x, controlPageY: y };\r\n};\r\n\r\n/**\r\n * 添加事件处理程序*\r\n * @param {string} eventName 事件名称\r\n * @param {function} handler 处理器\r\n */\r\nconst addEventHandler = (eventName, handler) => {\r\n\tif (handler && typeof handler == 'function') {\r\n\t\tlet handlers = BUTTONS_EVENTHANDLERS_MAP.get(eventName);\r\n\t\tif (!handlers) handlers = [];\r\n\t\thandlers.push(handler);\r\n\t\tBUTTONS_EVENTHANDLERS_MAP.set(eventName, handlers);\r\n\t}\r\n};\r\n\r\n/**\r\n * 执行事件处理程序\r\n * @param {string} eventName 事件名称\r\n * @returns\r\n */\r\nconst executeEventHandler = (eventName) => {\r\n\tlet handlers = BUTTONS_EVENTHANDLERS_MAP.get(eventName);\r\n\tif (!handlers || handlers.length == 0) return;\r\n\tfor (let handler of handlers) {\r\n\t\thandler && handler();\r\n\t}\r\n};\r\n\r\n/**\r\n * 添加掉落事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addDropEventHandler = (handler) => {\r\n\taddEventHandler('DROP', handler);\r\n};\r\n\r\n/**\r\n * 添加左移事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addLeftEventHandler = (handler) => {\r\n\taddEventHandler('LEFT', handler);\r\n};\r\n\r\n/**\r\n * 添加右移事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addRightEventHandler = (handler) => {\r\n\taddEventHandler('RIGHT', handler);\r\n};\r\n\r\n/**\r\n * 添加下移事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addDownEventHandler = (handler) => {\r\n\taddEventHandler('DOWN', handler);\r\n};\r\n\r\n/**\r\n * 添加旋转事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addRotateEventHandler = (handler) => {\r\n\taddEventHandler('ROTATE', handler);\r\n};\r\n\r\n/**\r\n * 添加重启事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addRestartEventHandler = (handler) => {\r\n\taddEventHandler('RESTART', handler);\r\n};\r\n\r\n/**\r\n * 添加暂停事件处理程序\r\n * @param {function} handler 处理器\r\n */\r\nconst addPauseEventHandler = (handler) => {\r\n\taddEventHandler('PAUSE', handler);\r\n};\r\n\r\nexport default {\r\n\tinitialize,\r\n\taddDropEventHandler,\r\n\taddLeftEventHandler,\r\n\taddRightEventHandler,\r\n\taddDownEventHandler,\r\n\taddRotateEventHandler,\r\n\taddRestartEventHandler,\r\n\taddPauseEventHandler\r\n};\r\n","/**\r\n * 控制板按钮类\r\n * @export Button\r\n * @class Button\r\n */\r\nexport default class Button {\r\n  constructor(\r\n    canvas,\r\n    x,\r\n    y,\r\n    radius,\r\n    text,\r\n    name = \"未命名按钮\",\r\n    options = { showShadow: true }\r\n  ) {\r\n    this.canvas = canvas;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.sx = this.x + this.radius;\r\n    this.sy = this.y + this.radius;\r\n    this.text = text;\r\n    this.name = name;\r\n\r\n    let gradient = canvas.getLinearGradient(\r\n      this.x + this.radius * 2,\r\n      this.y,\r\n      this.x,\r\n      this.y + this.radius * 2,\r\n      [\r\n        { position: 0, color: options.stopColor1 || \"#343434\" },\r\n        { position: 1, color: options.stopColor2 || \"black\" }\r\n      ]\r\n    );\r\n    canvas.fillCircle(this.sx, this.sy, this.radius, 0, Math.PI * 2, false, {\r\n      fillStyle: gradient,\r\n      shadowOffsetX: options.showShadow ? -4 : 0,\r\n      shadowOffsetY: options.showShadow ? 4 : 0,\r\n      shadowBlur: options.showShadow ? 2 : 0,\r\n      shadowColor: options.shadownColor || \"rgb(0,0,0,0.5)\"\r\n    });\r\n\r\n    if (this.text) {\r\n      let textWidth = this.canvas.measureText(this.text),\r\n        fontSize = this.radius * 0.5;\r\n      fontSize = fontSize < 10 ? 10 : fontSize;\r\n      this.canvas.fillText(text, this.sx, this.sy + fontSize / 4, {\r\n        font: `${fontSize}px Arial`,\r\n        fillStyle: \"white\",\r\n        textAlign: \"center\",\r\n        textBaseLine: \"hanging\"\r\n      });\r\n    }\r\n\r\n    this.contains = this.contains.bind(this);\r\n  }\r\n\r\n  /**\r\n   * 是否包含该坐标\r\n   *\r\n   * @param {number} x 坐标x\r\n   * @param {number} y 坐标y\r\n   * @returns\r\n   * @memberof Button\r\n   */\r\n  contains(x, y) {\r\n    return (\r\n      Math.sqrt(Math.pow(x - this.sx, 2) + Math.pow(y - this.sy, 2)) <=\r\n      this.radius\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @file 引擎模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { extend, getScore } from '../util';\r\nimport DB from './db';\r\nimport TIMER from './timer';\r\nimport BUILDER from './builder';\r\nimport ANIMATION from './animation';\r\n\r\nconst INTERVAL = 500,\r\n\tSHAPES = [],\r\n\tSCREEN = {\r\n\t\tmatrixSizeX: 0,\r\n\t\tmatrixSizeY: 0,\r\n\t\tactivate: function() {},\r\n\t\tinactivate: function() {},\r\n\t\thighlight: function() {},\r\n\t\tunhighlight: function() {},\r\n\t\tupdateScore: function() {},\r\n\t\tupdateEliminatedRowNum: function() {},\r\n\t\tupdateNextShape: function() {}\r\n\t};\r\n\r\nlet elapsingObject = {\r\n\tshape: null,\r\n\ttotalScore: 0,\r\n\teliminatedRowNum: 0,\r\n\tisHighlightAnimating: false,\r\n\tisPaused: false,\r\n\tclear() {\r\n\t\telapsingObject.isPaused = false;\r\n\t\telapsingObject.shape = null;\r\n\t\telapsingObject.totalScore = 0;\r\n\t\telapsingObject.eliminatedRowNum = 0;\r\n\t\telapsingObject.isHighlightAnimating = false;\r\n\t}\r\n};\r\n\r\n/**\r\n * 初始化\r\n * @param {object} screenOptions 屏幕配置选项\r\n */\r\nconst initialize = (screenOptions) => {\r\n\textend(SCREEN, screenOptions);\r\n\r\n\tDB.initialize(SCREEN.matrixSizeX, SCREEN.matrixSizeY);\r\n\tTIMER.initialize(INTERVAL, onTimerElapsed);\r\n\tANIMATION.initialize(screenOptions);\r\n};\r\n\r\n/**\r\n * 当定时器经过一个单位的间隔时间后的处理程序\r\n * @returns\r\n */\r\nconst onTimerElapsed = () => {\r\n\tif (elapsingObject.isHighlightAnimating) return;\r\n\r\n\twhile (SHAPES.length < 2) {\r\n\t\tSHAPES.push(BUILDER.getShape(SCREEN.matrixSizeX));\r\n\t}\r\n\r\n\tif (!elapsingObject.shape) {\r\n\t\telapsingObject.shape = SHAPES.shift();\r\n\t\tSCREEN.updateNextShape(SHAPES[0].getRawCoordinates());\r\n\t}\r\n\r\n\telapsingObject.shape.down();\r\n\r\n\treturn onShapeMoved();\r\n};\r\n\r\n/**\r\n * 当图形发生移动时的处理程序\r\n * @returns\r\n */\r\nconst onShapeMoved = () => {\r\n\tif (!elapsingObject.shape) return;\r\n\r\n\tDB.update(elapsingObject.shape.prevCoordinates, elapsingObject.shape.coordinates);\r\n\tSCREEN.inactivate(elapsingObject.shape.prevCoordinates);\r\n\tSCREEN.activate(elapsingObject.shape.coordinates);\r\n\r\n\tif (DB.checkWhetherHasReachedBottom(elapsingObject.shape.coordinates)) {\r\n\t\tonRowsFilled(DB.getFilledYCoordinates());\r\n\t\telapsingObject.shape = null;\r\n\t}\r\n};\r\n\r\n/**\r\n * 当有若干行被填满时的处理程序\r\n * @param {Array<integer>} yCoordinates 行的Y轴坐标集合\r\n * @returns\r\n */\r\nconst onRowsFilled = (yCoordinates) => {\r\n\tif (!yCoordinates || yCoordinates.length == 0) {\r\n\t\tif (DB.isAllFilled()) {\r\n\t\t\tconsole.log(\r\n\t\t\t\t`You lost game at ${new Date().toLocaleString()}, and you got ${elapsingObject.totalScore} in score while you had eliminated ${elapsingObject.eliminatedRowNum} rows.`\r\n\t\t\t);\r\n\t\t\tstop();\r\n\r\n\t\t\tSCREEN.updateScore(0);\r\n\t\t\tSCREEN.updateEliminatedRowNum(0);\r\n\t\t\tSCREEN.updateNextShape([]);\r\n\r\n      \t\t// 开启清屏动画，然后再次启动引擎\r\n\t\t\tANIMATION.fillScreen(() => {\r\n\t\t\t\tANIMATION.clearScreen(start);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\telapsingObject.isHighlightAnimating = true;\r\n\tANIMATION.highlight(yCoordinates, 5, () => {\r\n\t\telapsingObject.totalScore += getScore(yCoordinates);\r\n\t\tSCREEN.updateScore(elapsingObject.totalScore);\r\n\t\telapsingObject.eliminatedRowNum += yCoordinates.length;\r\n\t\tSCREEN.updateEliminatedRowNum(elapsingObject.eliminatedRowNum);\r\n\r\n\t\tDB.reset(yCoordinates, (inactives, actives) => {\r\n\t\t\tSCREEN.inactivate(inactives);\r\n\t\t\tSCREEN.activate(actives);\r\n\t\t});\r\n\t\telapsingObject.isHighlightAnimating = false;\r\n\r\n\t\tonRowsFilled(DB.getFilledYCoordinates());\r\n\t});\r\n};\r\n\r\n/**\r\n * 启动引擎\r\n */\r\nconst start = () => {\r\n\tTIMER.start();\r\n};\r\n\r\n/**\r\n * 停止引擎\r\n *\r\n */\r\nconst stop = () => {\r\n\tTIMER.stop();\r\n\telapsingObject.clear();\r\n};\r\n\r\n/**\r\n * 当收到左移指令时\r\n * @returns\r\n */\r\nconst onMoveLeft = () => {\r\n\telapsingObject.isPaused && onGameRestart();\r\n\tif (elapsingObject.shape && DB.checkWhetherHasReachedLeft(elapsingObject.shape.coordinates)) return;\r\n\tif (elapsingObject.shape) {\r\n\t\telapsingObject.shape.left();\r\n\t\treturn onShapeMoved();\r\n\t}\r\n};\r\n\r\n/**\r\n * 当收到右移指令时\r\n * @returns\r\n */\r\nconst onMoveRight = () => {\r\n\telapsingObject.isPaused && onGameRestart();\r\n\tif (elapsingObject.shape && DB.checkWhetherHasReachedRight(elapsingObject.shape.coordinates)) return;\r\n\tif (elapsingObject.shape) {\r\n\t\telapsingObject.shape.right();\r\n\t\treturn onShapeMoved();\r\n\t}\r\n};\r\n\r\n/**\r\n * 当收到下移指令时\r\n * @returns\r\n */\r\nconst onMoveDown = () => {\r\n\telapsingObject.isPaused && onGameRestart();\r\n\tif (elapsingObject.shape && DB.checkWhetherHasReachedBottom(elapsingObject.shape.coordinates)) return;\r\n\tif (elapsingObject.shape) {\r\n\t\telapsingObject.shape.down();\r\n\t\treturn onShapeMoved();\r\n\t}\r\n};\r\n\r\n/**\r\n * 当收到掉落指令时\r\n * @returns\r\n */\r\nconst onMoveDrop = () => {\r\n\telapsingObject.isPaused && onGameRestart();\r\n\twhile (elapsingObject.shape) {\r\n\t\telapsingObject.shape.down();\r\n\t\tonShapeMoved();\r\n\t}\r\n};\r\n\r\n/**\r\n * 当收到旋转指令时\r\n * @returns\r\n */\r\nconst onMoveRotate = () => {\r\n\telapsingObject.isPaused && onGameRestart();\r\n\tif (elapsingObject.shape && DB.checkWhetherHasReachedBottom(elapsingObject.shape.coordinates)) return;\r\n\tif (elapsingObject.shape) {\r\n\t\telapsingObject.shape.rotate();\r\n\t\treturn onShapeMoved();\r\n\t}\r\n};\r\n\r\n/**\r\n * 当收到暂停指令时\r\n * @returns\r\n */\r\nconst onGamePause = () => {\r\n\telapsingObject.isPaused = true;\r\n\tTIMER.pause();\r\n};\r\n\r\n/**\r\n * 当收到重启指令时\r\n * @returns\r\n */\r\nconst onGameRestart = () => {\r\n\telapsingObject.isPaused = false;\r\n\tTIMER.resume();\r\n};\r\n\r\nexport default {\r\n\tinitialize,\r\n\tstart,\r\n\tonMoveLeft,\r\n\tonMoveRight,\r\n\tonMoveDown,\r\n\tonMoveDrop,\r\n\tonMoveRotate,\r\n\tonGamePause,\r\n\tonGameRestart\r\n};\r\n","/**\r\n * @file 定时器模块\r\n * @version 1.0.0\r\n */\r\n\r\nlet options = {\r\n    inetrval: 0,\r\n    handler: null\r\n  },\r\n  isPaused = false,\r\n  timerID = -1;\r\n\r\n/**\r\n * 初始化\r\n * @param {integer} interval 定时时间\r\n * @param {function} handler 定时器处理器\r\n */\r\nconst initialize = (interval, handler) => {\r\n  options.interval = interval;\r\n  options.handler = handler;\r\n};\r\n\r\n/**\r\n * 启动\r\n */\r\nconst start = () => {\r\n  stop();\r\n  timerID = setInterval(() => {\r\n    !isPaused && options.handler && options.handler();\r\n  }, options.interval);\r\n};\r\n\r\n/**\r\n * 暂停\r\n */\r\nconst pause = () => {\r\n  isPaused = true;\r\n};\r\n\r\n/**\r\n * 继续\r\n */\r\nconst resume = () => {\r\n  isPaused = false;\r\n};\r\n\r\n/**\r\n * 停止\r\n */\r\nconst stop = () => {\r\n  isPaused = false;\r\n  timerID && clearInterval(timerID);\r\n};\r\n\r\nexport default {\r\n  initialize,\r\n  start,\r\n  pause,\r\n  resume,\r\n  stop\r\n};\r\n","/**\r\n * @file 形状生成器模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport Shape from \"./shape\";\r\n\r\n/**\r\n * 田字型方块\r\n */\r\nconst SquareShape = [\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 1, y: 1 }, { x: 0, y: 1 }]\r\n];\r\n\r\n/**\r\n * L字型方块\r\n */\r\nconst LShape = [\r\n  [{ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }, { x: 2, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 0, y: 2 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 2, y: 1 }],\r\n  [{ x: 1, y: 0 }, { x: 1, y: 1 }, { x: 1, y: 2 }, { x: 0, y: 2 }]\r\n];\r\n\r\n/**\r\n * 反L型方块\r\n */\r\nconst ReverseLShape = [\r\n  [{ x: 2, y: 0 }, { x: 2, y: 1 }, { x: 1, y: 1 }, { x: 0, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 0, y: 2 }, { x: 1, y: 2 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 0, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 1, y: 1 }, { x: 1, y: 2 }]\r\n];\r\n\r\n/**\r\n * 山字型方块\r\n */\r\nconst MoutainShape = [\r\n  [{ x: 1, y: 0 }, { x: 2, y: 1 }, { x: 1, y: 1 }, { x: 0, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 1 }, { x: 0, y: 2 }, { x: 0, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 1, y: 1 }],\r\n  [{ x: 1, y: 0 }, { x: 1, y: 1 }, { x: 1, y: 2 }, { x: 0, y: 1 }]\r\n];\r\n\r\n/**\r\n * 直线型方块\r\n */\r\nconst LineShape = [\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 2, y: 0 }, { x: 3, y: 0 }],\r\n  [{ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 0, y: 2 }, { x: 0, y: 3 }]\r\n];\r\n\r\n/**\r\n * 小H型方块\r\n */\r\nconst LittleHShape = [\r\n  [{ x: 0, y: 0 }, { x: 1, y: 0 }, { x: 1, y: 1 }, { x: 2, y: 1 }],\r\n  [{ x: 1, y: 0 }, { x: 1, y: 1 }, { x: 0, y: 1 }, { x: 0, y: 2 }]\r\n];\r\n\r\n/**\r\n * 反小H型方块\r\n */\r\nconst ReverseLittleHShape = [\r\n  [{ x: 1, y: 0 }, { x: 2, y: 0 }, { x: 1, y: 1 }, { x: 0, y: 1 }],\r\n  [{ x: 0, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }, { x: 1, y: 2 }]\r\n];\r\n\r\n/**\r\n * 生成一个图形\r\n * @returns {object} 一个模块图形\r\n */\r\nconst getShape = sizeX => {\r\n  let shapes = [\r\n    SquareShape,\r\n    LShape,\r\n    ReverseLShape,\r\n    MoutainShape,\r\n    LineShape,\r\n    LittleHShape,\r\n    ReverseLittleHShape\r\n  ];\r\n  let rand = Math.floor(Math.random() * shapes.length),\r\n    offsetX = 0,\r\n    offsetY = 0;\r\n  let shape = shapes[rand];\r\n  for (let { x, y } of shape[0]) {\r\n    if (offsetY < y) offsetY = y;\r\n    if (offsetX < x) offsetX = x;\r\n  }\r\n\r\n  return new Shape(\r\n    Math.floor((sizeX - offsetX) / 2),\r\n    -1 * offsetY,\r\n    ...shape\r\n  );\r\n};\r\n\r\nexport default {\r\n  getShape\r\n};\r\n","/**\r\n * 方块形状类\r\n * @export Shape\r\n * @class Shape\r\n */\r\nexport default class Shape {\r\n  constructor(offsetX, offsetY, ...states) {\r\n    this.states = states;\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n    this.stateIndex = 0;\r\n    this.prevCoordinates = [];\r\n    this.coordinates = this.states[this.stateIndex].map(({ x, y }) => ({\r\n      x: x + this.offsetX,\r\n      y: y + this.offsetY\r\n    }));\r\n    this.timestamp = Date.now();\r\n\r\n    this.getRawCoordinates = this.getRawCoordinates.bind(this);\r\n    this.getCoordinates = this.getCoordinates.bind(this);\r\n    this.left = this.left.bind(this);\r\n    this.right = this.right.bind(this);\r\n    this.down = this.down.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n  }\r\n\r\n  getRawCoordinates() {\r\n    return this.states[this.stateIndex];\r\n  }\r\n\r\n  getCoordinates() {\r\n    this.prevCoordinates = this.coordinates;\r\n    this.coordinates = this.states[this.stateIndex].map(({ x, y }) => ({\r\n      x: x + this.offsetX,\r\n      y: y + this.offsetY\r\n    }));\r\n    return this.coordinates;\r\n  }\r\n\r\n  left() {\r\n    this.offsetX--;\r\n    this.getCoordinates();\r\n  }\r\n\r\n  right() {\r\n    this.offsetX++;\r\n    this.getCoordinates();\r\n  }\r\n\r\n  down() {\r\n    this.offsetY++;\r\n    this.getCoordinates();\r\n  }\r\n\r\n  rotate() {\r\n    this.stateIndex++;\r\n    if (this.stateIndex == this.states.length) this.stateIndex = 0;\r\n    this.getCoordinates();\r\n  }\r\n}\r\n","/**\r\n * @file 动画模块\r\n * @version 1.0.0\r\n */\r\n\r\nimport { extend } from '../util';\r\nimport DB from './db';\r\n\r\nconst SCREEN = {\r\n\tmatrixSizeY: 0,\r\n\tactivate: function() {},\r\n\tinactivate: function() {},\r\n\thighlight: function() {},\r\n\tunhighlight: function() {}\r\n};\r\n\r\n/**\r\n * 初始化\r\n * @param {object} screenOptions 屏幕配置选项\r\n */\r\nconst initialize = (screenOptions) => {\r\n\textend(SCREEN, screenOptions);\r\n};\r\n\r\n/**\r\n * 高亮\r\n * @param {Array<integer>} yCoordinates Y轴坐标集合\r\n * @param {integer} count 计数\r\n * @param {function} callback 回调\r\n * @param {integer} timer 定时器ID\r\n */\r\nconst highlight = (yCoordinates, count, callback, timer) => {\r\n\tif (count % 2 == 0) {\r\n\t\tSCREEN.unhighlight(yCoordinates);\r\n\t} else {\r\n\t\tSCREEN.highlight(yCoordinates);\r\n\t}\r\n\r\n\tcount--;\r\n\ttimer && clearTimeout(timer);\r\n\tif (count >= 0) {\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\treturn highlight(yCoordinates, count, callback, timer);\r\n\t\t}, 150);\r\n\t} else {\r\n\t\tcallback && callback();\r\n\t}\r\n};\r\n\r\n/**\r\n * 填满屏幕\r\n * @param {function} callback 回调\r\n * @param {integer} timer 定时器ID\r\n * @param {integer} y Y轴坐标\r\n * @returns\r\n */\r\nconst fillScreen = (callback, timer, y) => {\r\n\tif (y === undefined) y = SCREEN.matrixSizeY - 1;\r\n\ttimer && clearTimeout(timer);\r\n\r\n\tlet coordinates = DB.fillRow(y);\r\n\tif (coordinates && coordinates.length > 0) {\r\n\t\tSCREEN.activate(coordinates);\r\n\t} else {\r\n\t\tcallback && callback();\r\n\t\treturn;\r\n\t}\r\n\r\n\ty--;\r\n\ttimer = setTimeout(() => {\r\n\t\treturn fillScreen(callback, timer, y);\r\n\t}, 70);\r\n};\r\n\r\n/**\r\n * 清理屏幕\r\n * @param {function} callback 回调\r\n * @param {integer} timer 定时器ID\r\n * @param {integer} y Y轴坐标\r\n * @returns\r\n */\r\nconst clearScreen = (callback, timer, y) => {\r\n\tif (y === undefined) y = 0;\r\n\ttimer && clearTimeout(timer);\r\n\r\n\tlet coordinates = DB.clearRow(y);\r\n\tif (coordinates && coordinates.length > 0) {\r\n\t\tSCREEN.inactivate(coordinates);\r\n\t} else {\r\n\t\tcallback && callback();\r\n\t\treturn;\r\n\t}\r\n\r\n\ty++;\r\n\ttimer = setTimeout(() => {\r\n\t\treturn clearScreen(callback, timer, y);\r\n\t}, 70);\r\n};\r\n\r\nexport default {\r\n\tinitialize,\r\n\thighlight,\r\n\tfillScreen,\r\n\tclearScreen\r\n};\r\n"],"sourceRoot":""}